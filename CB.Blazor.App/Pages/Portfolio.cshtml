@page "/portfolio"
@inject ICMSService CMS

<div class="app-content">
    <Heading Size="HeadingSize.Is1" Margin="Margin.Is3.FromBottom.Is3.FromTop">Portfolio</Heading>
    @if (Data == null)
    {
        <span>Loading...</span>
    }
    else
    {
        <Row>
            <Column>
                <CardGroup>
                    @foreach (var project in Data.Projects)
                    {
                        <Card Margin="Margin.Is4.FromBottom">
                            <CardImage Source="@project.ImageUrl" Alt="@project.Name">
                            </CardImage>
                            <CardBody>
                                <CardTitle Size="5">@project.Name</CardTitle>
                                <CardText>
                                    @project.Description
                                </CardText>
                                <CardText>
                                    <a class="text-muted" href="@project.ExternalUrl">Visit site</a>
                                </CardText>
                            </CardBody>
                        </Card>
                    }
                </CardGroup>
            </Column>
        </Row>
        <Row>
            <Column ColumnSize="ColumnSize.IsFull">
                <Card Margin="Margin.Is4.OnY">
                    <CardBody>
                        <CardTitle Size="4">About me</CardTitle>
                        <CardText>
                            @((MarkupString)Data.Biography)
                        </CardText>
                    </CardBody>
                </Card>
            </Column>
        </Row>
        <Row>
            <Column ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnTablet.Is12.OnMobile">
                <Card Margin="Margin.Is4.OnY">
                    <CardHeader>
                        <CardTitle Size="4">Skills</CardTitle>
                    </CardHeader>
                    <CardBody>
                        @foreach (var skill in Data.Skills)
                        {
                            <Badge Color="@ResolveColour(skill.Colour)">@skill.Name</Badge>
                        }
                    </CardBody>
                </Card>
            </Column>
            <Column ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnTablet.Is12.OnMobile">
                <Card Margin="Margin.Is4.OnY" Background="Background.Dark" IsWhiteText="true" ColumnSize="ColumnSize.IsFull">
                    <CardBody>
                        <CardTitle Size="4">Get a quote</CardTitle>
                        <CardText>
                            Drop a line with your requirements and get a free quote and timeline.
                        </CardText>
                        <SimpleButton Color="Color.Primary" Margin="Margin.Is2.FromTop" IsBlock="true" Clicked="GoToContact">Contact Me</SimpleButton>
                    </CardBody>
                </Card>
            </Column>
            <Column ColumnSize="ColumnSize.Is4.OnDesktop.Is12.OnTablet.Is12.OnMobile">
                <Card Margin="Margin.Is4.OnY" ColumnSize="ColumnSize.IsFull">
                    <CardBody>
                        <CardTitle Size="4">Looking for my CV?</CardTitle>
                        <CardText>
                            Here is a link to my curriculum vitae in pdf format
                        </CardText>
                        <SimpleButton Color="Color.Primary" Margin="Margin.Is2.FromTop" IsBlock="true" Clicked="GoToCV">View</SimpleButton>
                    </CardBody>
                </Card>
            </Column>
        </Row>
    }
</div>

@functions {
    Interface.CMS.Portfolio Data { get; set; } = new Interface.CMS.Portfolio();

    protected override async Task OnInitAsync()
    {
        Data = await CMS.GetPortfolio();
    }

    void GoToCV()
    {
        UriHelper.NavigateTo(Data.CVUrl);
    }

    void GoToContact()
    {
        UriHelper.NavigateTo("contact");
    }

    private Blazorise.Color ResolveColour(string colour)
    {
        if (colour == "Primary")
        {
            return Color.Primary;
        }
        if (colour == "Secondary")
        {
            return Color.Secondary;
        }
        if (colour == "Success")
        {
            return Color.Success;
        }
        if (colour == "Info")
        {
            return Color.Info;
        }
        if (colour == "Warning")
        {
            return Color.Warning;
        }
        if (colour == "Danger")
        {
            return Color.Danger;
        }
        if (colour == "Light")
        {
            return Color.Light;
        }
        if (colour == "Dark")
        {
            return Color.Dark;
        }

        //todo: do something
        return Color.Dark;
    }
}
